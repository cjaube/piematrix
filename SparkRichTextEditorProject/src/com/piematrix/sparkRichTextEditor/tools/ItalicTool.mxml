<?xml version="1.0" encoding="utf-8"?>
<s:ToggleButton width="20" click="handleClick(event);" icon="{ITALIC_IMAGE}" mouseFocusEnabled="false" toolTip="Italic text" xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark">
	<fx:Script>
		<![CDATA[
			import flash.text.engine.FontPosture;
			import flashx.textLayout.formats.TextLayoutFormat;
			import mx.events.FlexEvent;
			import spark.components.TextArea;
			import spark.events.TextOperationEvent;

			[Embed(source = "/images/textToolBar/italic.png")]
			private const ITALIC_IMAGE:Class;

			private var _textArea:TextArea;

			/**
			 *  The textArea that this component interacts with
			 */
			public function get textArea():TextArea
			{
				return _textArea;
			}

			/**
			 *  @private
			 */
			public function set textArea(value:TextArea):void
			{
				if (_textArea)
				{
					_textArea.removeEventListener(FlexEvent.SELECTION_CHANGE, handleSelectionChange);
				}
				_textArea = value;
				if (_textArea)
				{
					_textArea.addEventListener(FlexEvent.SELECTION_CHANGE, handleSelectionChange, false, 0, true);
					handleSelectionChange();
				}
			}

			/**
			 *  @private
			 */
			private function handleClick(e:MouseEvent):void
			{
				var format:TextLayoutFormat = _textArea.getFormatOfRange(null, _textArea.selectionAnchorPosition, _textArea.selectionActivePosition);
				format.fontStyle = (format.fontStyle == FontPosture.ITALIC) ? FontPosture.NORMAL : FontPosture.ITALIC;
				_textArea.setFormatOfRange(format, _textArea.selectionAnchorPosition, _textArea.selectionActivePosition);
				_textArea.setFocus();
				_textArea.dispatchEvent(new TextOperationEvent(TextOperationEvent.CHANGE));
			}

			/**
			 *  @private
			 */
			private function handleSelectionChange(e:FlexEvent = null):void
			{
				var format:TextLayoutFormat = _textArea.getFormatOfRange(null, _textArea.selectionAnchorPosition, _textArea.selectionActivePosition);
				if (format.fontStyle == FontPosture.ITALIC)
				{
					this.selected = true;
				}
				else
				{
					this.selected = false;
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</s:ToggleButton>
